age:
  secretName: &ageSecretName helm-secrets-private-keys

argo-cd:
  global:
    image:
      repository: ghcr.io/kvanzuijlen/homelab/argoproj/argocd
  configs:
    cm:
      dex.config: |
        connectors:
          # GitHub example
          - type: github
            id: github
            name: GitHub
            config:
              clientID: $dex.github.clientID
              clientSecret: $dex.github.clientSecret
    repositories:
      argocd:
        name: argocd
        url: https://argoproj.github.io/argo-helm
        type: helm
      cert-manager:
        name: cert-manager
        url: https://charts.jetstack.io
        type: helm
      cloudflare:
        name: cloudflare
        url: https://cloudflare.github.io/helm-charts
        type: helm
      ingress-nginx:
        name: ingress-nginx
        url: https://kubernetes.github.io/ingress-nginx
        type: helm
      homelab:
        url: git@github.com:kvanzuijlen/homelab.git
        type: git
    credentialTemplates:
      homelab:
        url: git@github.com:kvanzuijlen/homelab.git
        type: git
    params:
      server.insecure: true
  applicationSet:
    enabled: false
  server:
    ingress:
      enabled: true
      annotations:
        kubernetes.io/tls-acme: "true"
        "nginx.ingress.kubernetes.io/ssl-redirect": "false"
    config:
      helm.valuesFileSchemes: >-
        secrets,
        https
  repoServer:
    env:
      - name: SOPS_AGE_KEY_FILE
        value: /helm-secrets-private-keys/key.txt
    volumes:
      - name: *ageSecretName
        secret:
          secretName: *ageSecretName
    volumeMounts:
      - mountPath: /helm-secrets-private-keys/
        name: *ageSecretName
    rbac:
      - apiGroups:
          - argoproj.io
        resources:
          - applications
        verbs:
          - get
          - list
          - watch
#argo-cd:
#  redis-ha:
#    enabled: true
#
#  controller:
#    replicas: 1
#
#  server:
#    autoscaling:
#      enabled: true
#      minReplicas: 2
#
#  repoServer:
#    autoscaling:
#      enabled: true
#      minReplicas: 2
#
#  applicationSet:
#    replicas: 2

argocd-apps:
  applications:
    - name: homelab-applications
      namespace: argocd
      project: homelab
      source:
        repoURL: git@github.com:kvanzuijlen/homelab.git
        targetRevision: HEAD
        path: helm/applications
        helm:
          valueFiles:
            - values.yaml
      destination:
        server: https://kubernetes.default.svc
        namespace: argocd
      syncPolicy:
        automated:
          prune: true
          selfHeal: true
  projects:
    - name: homelab
      namespace: argocd
      sourceRepos:
        - "*"
      destinations:
        - namespace: "*"
          server: https://kubernetes.default.svc
      clusterResourceWhitelist:
        - group: "*"
          kind: "*"
      orphanedResources:
        warn: false

#  applicationsets:
#    - name: homelab
#      namespace: argocd


# - name: guestbook
#   namespace: argocd
#   additionalLabels: {}
#   additionalAnnotations: {}
#   # See PR #10026 (ArgoCD v2.5 or later)
#   # goTemplate: false
#   generators:
#   - git:
#       repoURL: https://github.com/argoproj/argocd-example-apps.git
#       revision: HEAD
#       directories:
#       - path: guestbook
#       - path: kustomize-*
#   # Progressive Syncs is an experimental feature and it must be explicitly enabled
#   # Ref: https://argo-cd.readthedocs.io/en/stable/operator-manual/applicationset/Progressive-Syncs/#enabling-progressive-syncs
#   strategy:
#     type: RollingSync
#     rollingSync:
#       steps:
#       - matchExpressions:
#         - key: project
#           operator: In
#           values:
#           - guestbook
#       - matchExpressions:
#         - key: project
#           operator: In
#           values:
#           - kustomize-foo
#           - kustomize-bar
#   template:
#     metadata:
#       name: '{{path.basename}}'
#       labels:
#         project: '{{path.basename}}'
#       annotations: {}
#     spec:
#       project: default
#       source:
#         repoURL: https://github.com/argoproj/argocd-example-apps.git
#         targetRevision: HEAD
#         path: '{{path}}'
#       destination:
#         server: https://kubernetes.default.svc
#         namespace: default
#       syncPolicy:
#         automated:
#           prune: false
#           selfHeal: false
#       ignoreDifferences:
#       - group: apps
#         kind: Deployment
#         jsonPointers:
#         - /spec/replicas
#       info:
#       - name: url
#         value: https://argoproj.github.io/
#   syncPolicy:
#     # Set Application finalizer
#     preserveResourcesOnDeletion: false
